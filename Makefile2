

BUILD_DIR := build

CC := $(CXX) #g++
LD := $(CXX) #g++

CFLAGS += -std=c++17 -stdlib=libstdc++ $(EXTRA_CFLAGS) -m64 -march=sandybridge -pthread -I/efs/tools/protobuf_c4/include

OPENCV_INCLUDE=$(OPENCV_ROOT)/include
OPENCV_LIB=$(OPENCV_ROOT)/lib

CFLAGS += -I$(OPENCV_INCLUDE)
LDFLAGS = $(EXTRA_LDFLAGS) -L/efs/tools/protobuf_c4/lib -lprotobuf -lpthread

ifdef PROFILE
  CFLAGS += -DPROFILE
  LDFLAGS += -lprofiler
endif

ifdef NOCACHE
  CFLAGS += -DNOCACHE
endif

ifdef 3D
  CFLAGS += -DALIGN3D
endif

ifdef SKIPOUTPUT
  CFLAGS += -DSKIPOUTPUT
endif

ifdef LOGIMAGES
  CFLAGS += -DLOGIMAGES
endif

ifndef INCLUDEHDF5
  CFLAGS += -DSKIPHDF5
endif

ifdef MEMCHECK
  CFLAGS += -DMEMCHECK
endif

ifndef INCLUDEJSON
  CFLAGS += -DSKIPJSON
endif

ifeq ($(CILKSAN),1)
CFLAGS += -fsanitize=cilk
endif


ifdef ASSEMBLY
	CFLAGS += -S
endif

ifdef DEBUG
	CFLAGS += -O1 -g
else
	CFLAGS += -DNDEBUG
	#CFLAGS += -O3 -g -mavx2 -m64 -march=native
	CFLAGS += -O3 -g -mavx -msse -msse2 -msse3 -msse4 -msse4.1 -msse4.2 -m64 -march=sandybridge
	#-Ofast
endif

LDFLAGS += -L$(OPENCV_LIB) -lcilkrts -lopencv_imgcodecs -lopencv_core -lopencv_imgproc -lopencv_features2d -lopencv_xfeatures2d -lopencv_flann -lopencv_video -lopencv_videostab -lopencv_calib3d -lopencv_ml

ifdef ASSEMBLY
	BINS = common.S align.S run.S
else
	BINS = run_align
endif

.PHONY:	all clean

all: $(BINS)

$(BUILD_DIR)/common.o: common.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/common.S: common.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/match.o: match.cpp ransac.h
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/ransac.o: ransac.cpp ransac.h
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/align.o: align.cpp othersift2.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/align.S: align.cpp othersift2.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/run.o: run.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/stack.o: stack.cpp stack.hpp stack_section.cpp stack_tile.cpp stack_learning.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<


$(BUILD_DIR)/engine.o: cilk_tools/engine.cpp cilk_tools/scheduler.cpp cilk_tools/Graph.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/scheduler.o: cilk_tools/scheduler.cpp cilk_tools/Graph.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/Graph.o: cilk_tools/Graph.cpp cilk_tools/scheduler.cpp cilk_tools/Graph.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/mrparams.o: mrparams.cpp mrparams.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/paramdb.o: paramdb.cpp paramdb.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/render.o: render.cpp render.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/data.o: data.cpp data.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<


$(BUILD_DIR)/triangle_mesh.o: triangle_mesh.cpp triangle_mesh.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/range_tree.o: range_tree.cpp range_tree.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/mlbase.o: mlbase.cpp mlbase.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/matchtilestask.o: matchtilestask.cpp matchtilestask.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/tilesifttask.o: tilesifttask.cpp tilesifttask.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/matchtilepairtask.o: matchtilepairtask.cpp matchtilepairtask.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/stack_helpers.o: stack_helpers.cpp stack_helpers.h
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<

$(BUILD_DIR)/elastic_optimization.o: elastic_optimization.cpp elastic_optimization.h
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<


$(BUILD_DIR)/tile_cache.o: tile_cache.cpp tile_cache.hpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<


#engine.o: cilk_tools/Graph.cpp cilk_tools/engine.cpp cilk_tools/scheduler.cpp
#	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<



#
#Graph.o: Graph.cpp Graph.h
#	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<    	
$(BUILD_DIR)/run.S: run.cpp
	$(CC) $(CFLAGS) $(DEFINES) -c -o $@ $<    	

run_align: $(BUILD_DIR)/Graph.o $(BUILD_DIR)/scheduler.o $(BUILD_DIR)/engine.o $(BUILD_DIR)/common.o $(BUILD_DIR)/align.o $(BUILD_DIR)/match.o $(BUILD_DIR)/ransac.o $(BUILD_DIR)/run.o $(BUILD_DIR)/stack.o $(BUILD_DIR)/mrparams.o $(BUILD_DIR)/paramdb.o $(BUILD_DIR)/data.o $(BUILD_DIR)/render.o $(BUILD_DIR)/triangle_mesh.o $(BUILD_DIR)/range_tree.o $(BUILD_DIR)/mlbase.o $(BUILD_DIR)/matchtilestask.o $(BUILD_DIR)/tilesifttask.o $(BUILD_DIR)/matchtilepairtask.o $(BUILD_DIR)/stack_helpers.o $(BUILD_DIR)/elastic_optimization.o $(BUILD_DIR)/tile_cache.o
	$(LD) -o $@ $^ $(LDFLAGS)

clean:
	rm -f $(BINS) $(BUILD_DIR)/*.o
